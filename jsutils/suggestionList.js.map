{"version":3,"sources":["jsutils/suggestionList.js"],"names":[],"mappings":";;;;;kBAcwB;;;;;;;;;;;;;;;AAAT,SAAS,cAAT,CACb,KADa,EAEb,OAFa,EAGE;AACf,MAAM,oBAAoB,OAAO,MAAP,CAAc,IAAd,CAApB,CADS;AAEf,MAAM,UAAU,QAAQ,MAAR,CAFD;AAGf,MAAM,iBAAiB,MAAM,MAAN,GAAe,CAAf,CAHR;AAIf,OAAK,IAAI,IAAI,CAAJ,EAAO,IAAI,OAAJ,EAAa,GAA7B,EAAkC;AAChC,QAAM,WAAW,gBAAgB,KAAhB,EAAuB,QAAQ,CAAR,CAAvB,CAAX,CAD0B;AAEhC,QAAM,YAAY,KAAK,GAAL,CAAS,cAAT,EAAyB,QAAQ,CAAR,EAAW,MAAX,GAAoB,CAApB,EAAuB,CAAhD,CAAZ,CAF0B;AAGhC,QAAI,YAAY,SAAZ,EAAuB;AACzB,wBAAkB,QAAQ,CAAR,CAAlB,IAAgC,QAAhC,CADyB;KAA3B;GAHF;AAOA,SAAO,OAAO,IAAP,CAAY,iBAAZ,EAA+B,IAA/B,CACL,UAAC,CAAD,EAAK,CAAL;WAAW,kBAAkB,CAAlB,IAAuB,kBAAkB,CAAlB,CAAvB;GAAX,CADF,CAXe;CAHF;;;;;;;;;;;;;;;;AAiCf,SAAS,eAAT,CAAyB,CAAzB,EAA4B,CAA5B,EAA+B;AAC7B,MAAI,aAAJ,CAD6B;AAE7B,MAAI,aAAJ,CAF6B;AAG7B,MAAM,IAAI,EAAJ,CAHuB;AAI7B,MAAM,UAAU,EAAE,MAAF,CAJa;AAK7B,MAAM,UAAU,EAAE,MAAF,CALa;;AAO7B,OAAK,IAAI,CAAJ,EAAO,KAAK,OAAL,EAAc,GAA1B,EAA+B;AAC7B,MAAE,CAAF,IAAO,CAAE,CAAF,CAAP,CAD6B;GAA/B;;AAIA,OAAK,IAAI,CAAJ,EAAO,KAAK,OAAL,EAAc,GAA1B,EAA+B;AAC7B,MAAE,CAAF,EAAK,CAAL,IAAU,CAAV,CAD6B;GAA/B;;AAIA,OAAK,IAAI,CAAJ,EAAO,KAAK,OAAL,EAAc,GAA1B,EAA+B;AAC7B,SAAK,IAAI,CAAJ,EAAO,KAAK,OAAL,EAAc,GAA1B,EAA+B;AAC7B,UAAM,OAAO,EAAE,IAAI,CAAJ,CAAF,KAAa,EAAE,IAAI,CAAJ,CAAf,GAAwB,CAAxB,GAA4B,CAA5B,CADgB;;AAG7B,QAAE,CAAF,EAAK,CAAL,IAAU,KAAK,GAAL,CACR,EAAE,IAAI,CAAJ,CAAF,CAAS,CAAT,IAAc,CAAd,EACA,EAAE,CAAF,EAAK,IAAI,CAAJ,CAAL,GAAc,CAAd,EACA,EAAE,IAAI,CAAJ,CAAF,CAAS,IAAI,CAAJ,CAAT,GAAkB,IAAlB,CAHF,CAH6B;;AAS7B,UAAI,IAAI,CAAJ,IAAS,IAAI,CAAJ,IACT,EAAE,IAAI,CAAJ,CAAF,KAAa,EAAE,IAAI,CAAJ,CAAf,IACA,EAAE,IAAI,CAAJ,CAAF,KAAa,EAAE,IAAI,CAAJ,CAAf,EAAuB;AACzB,UAAE,CAAF,EAAK,CAAL,IAAU,KAAK,GAAL,CAAS,EAAE,CAAF,EAAK,CAAL,CAAT,EAAkB,EAAE,IAAI,CAAJ,CAAF,CAAS,IAAI,CAAJ,CAAT,GAAkB,IAAlB,CAA5B,CADyB;OAF3B;KATF;GADF;;AAkBA,SAAO,EAAE,OAAF,EAAW,OAAX,CAAP,CAjC6B;CAA/B","file":"jsutils/suggestionList.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Given an invalid input string and a list of valid options, returns a filtered\n * list of valid options sorted based on their similarity with the input.\n */\nexport default function suggestionList(\n  input: string,\n  options: Array<string>\n): Array<string> {\n  const optionsByDistance = Object.create(null);\n  const oLength = options.length;\n  const inputThreshold = input.length / 2;\n  for (let i = 0; i < oLength; i++) {\n    const distance = lexicalDistance(input, options[i]);\n    const threshold = Math.max(inputThreshold, options[i].length / 2, 1);\n    if (distance <= threshold) {\n      optionsByDistance[options[i]] = distance;\n    }\n  }\n  return Object.keys(optionsByDistance).sort(\n    (a , b) => optionsByDistance[a] - optionsByDistance[b]\n  );\n}\n\n/**\n * Computes the lexical distance between strings A and B.\n *\n * The \"distance\" between two strings is given by counting the minimum number\n * of edits needed to transform string A into string B. An edit can be an\n * insertion, deletion, or substitution of a single character, or a swap of two\n * adjacent characters.\n *\n * This distance can be useful for detecting typos in input or sorting\n *\n * @param {string} a\n * @param {string} b\n * @return {int} distance in number of edits\n */\nfunction lexicalDistance(a, b) {\n  let i;\n  let j;\n  const d = [];\n  const aLength = a.length;\n  const bLength = b.length;\n\n  for (i = 0; i <= aLength; i++) {\n    d[i] = [ i ];\n  }\n\n  for (j = 1; j <= bLength; j++) {\n    d[0][j] = j;\n  }\n\n  for (i = 1; i <= aLength; i++) {\n    for (j = 1; j <= bLength; j++) {\n      const cost = a[i - 1] === b[j - 1] ? 0 : 1;\n\n      d[i][j] = Math.min(\n        d[i - 1][j] + 1,\n        d[i][j - 1] + 1,\n        d[i - 1][j - 1] + cost\n      );\n\n      if (i > 1 && j > 1 &&\n          a[i - 1] === b[j - 2] &&\n          a[i - 2] === b[j - 1]) {\n        d[i][j] = Math.min(d[i][j], d[i - 2][j - 2] + cost);\n      }\n    }\n  }\n\n  return d[aLength][bLength];\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}