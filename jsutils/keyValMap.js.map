{"version":3,"sources":["jsutils/keyValMap.js"],"names":[],"mappings":";;;;;kBA2BwB;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAT,SAAS,SAAT,CACb,IADa,EAEb,KAFa,EAGb,KAHa,EAIO;AACpB,SAAO,KAAK,MAAL,CACL,UAAC,GAAD,EAAM,IAAN;WAAgB,GAAC,CAAI,MAAM,IAAN,CAAJ,IAAmB,MAAM,IAAN,CAAnB,EAAiC,GAAlC;GAAhB,EACA,EAFK,CAAP,CADoB;CAJP","file":"jsutils/keyValMap.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\n/**\n * Creates a keyed JS object from an array, given a function to produce the keys\n * and a function to produce the values from each item in the array.\n *\n *     const phoneBook = [\n *       { name: 'Jon', num: '555-1234' },\n *       { name: 'Jenny', num: '867-5309' }\n *     ]\n *\n *     // { Jon: '555-1234', Jenny: '867-5309' }\n *     const phonesByName = keyValMap(\n *       phoneBook,\n *       entry => entry.name,\n *       entry => entry.num\n *     )\n *\n */\nexport default function keyValMap<T, V>(\n  list: Array<T>,\n  keyFn: (item: T) => string,\n  valFn: (item: T) => V\n): {[key: string]: V} {\n  return list.reduce(\n    (map, item) => ((map[keyFn(item)] = valFn(item)), map),\n    {}\n  );\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}