{"version":3,"sources":["error/locatedError.js"],"names":[],"mappings":";;;;;QAkBgB;;AARhB;;;;;;;AAQO,SAAS,YAAT,CACL,aADK,EAEL,KAFK,EAGS;AACd,MAAM,UAAU,gBACd,cAAc,OAAd,IAAyB,OAAO,aAAP,CAAzB,GACA,4BAFc,CADF;AAId,MAAM,QAAQ,gBAAgB,cAAc,KAAd,GAAsB,IAAtC,CAJA;AAKd,MAAM,QAAQ,+BAAiB,OAAjB,EAA0B,KAA1B,EAAiC,KAAjC,CAAR,CALQ;AAMd,QAAM,aAAN,GAAsB,aAAtB,CANc;AAOd,SAAO,KAAP,CAPc;CAHT","file":"error/locatedError.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport { GraphQLError } from './GraphQLError';\n\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nexport function locatedError(\n  originalError: ?Error,\n  nodes: Array<any>\n): GraphQLError {\n  const message = originalError ?\n    originalError.message || String(originalError) :\n    'An unknown error occurred.';\n  const stack = originalError ? originalError.stack : null;\n  const error = new GraphQLError(message, nodes, stack);\n  error.originalError = originalError;\n  return error;\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}