{"version":3,"sources":["error/locatedError.js"],"names":[],"mappings":";;;;;QAkBgB;;AARhB;;;;;;;AAQO,SAAS,YAAT,CACL,aADK,EAEL,KAFK,EAGL,IAHK,EAIS;;;AAGd,MAAI,iBAAiB,cAAc,SAAd,EAAyB;AAC5C,WAAQ,aAAR,CAD4C;GAA9C;;AAIA,MAAM,UAAU,gBACd,cAAc,OAAd,IAAyB,OAAO,aAAP,CAAzB,GACA,4BAFc,CAPF;AAUd,SAAO,+BACL,OADK,EAEL,KAFK,EAGL,SAHK,EAIL,SAJK,EAKL,IALK,EAML,aANK,CAAP,CAVc;CAJT","file":"error/locatedError.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport { GraphQLError } from './GraphQLError';\n\n\n/**\n * Given an arbitrary Error, presumably thrown while attempting to execute a\n * GraphQL operation, produce a new GraphQLError aware of the location in the\n * document responsible for the original Error.\n */\nexport function locatedError(\n  originalError: ?Error,\n  nodes: Array<*>,\n  path: Array<string | number>\n): GraphQLError {\n  // Note: this uses a brand-check to support GraphQL errors originating from\n  // other contexts.\n  if (originalError && originalError.locations) {\n    return (originalError: any);\n  }\n\n  const message = originalError ?\n    originalError.message || String(originalError) :\n    'An unknown error occurred.';\n  return new GraphQLError(\n    message,\n    nodes,\n    undefined,\n    undefined,\n    path,\n    originalError\n  );\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}