{"version":3,"sources":["language/location.js"],"names":[],"mappings":";;;;;QAwBgB;;;;;;;;;;;;;;;;AAAT,SAAS,WAAT,CAAqB,MAArB,EAAqC,QAArC,EAAuE;AAC5E,MAAM,aAAa,cAAb,CADsE;AAE5E,MAAI,OAAO,CAAP,CAFwE;AAG5E,MAAI,SAAS,WAAW,CAAX,CAH+D;AAI5E,MAAI,iBAAJ,CAJ4E;AAK5E,SAAO,CAAC,QAAQ,WAAW,IAAX,CAAgB,OAAO,IAAP,CAAxB,CAAD,IAA0C,MAAM,KAAN,GAAc,QAAd,EAAwB;AACvE,YAAQ,CAAR,CADuE;AAEvE,aAAS,WAAW,CAAX,IAAgB,MAAM,KAAN,GAAc,MAAM,CAAN,EAAS,MAAT,CAA9B,CAF8D;GAAzE;AAIA,SAAO,EAAE,UAAF,EAAQ,cAAR,EAAP,CAT4E;CAAvE","file":"language/location.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { Source } from './source';\n\n/**\n * Represents a location in a Source.\n */\ntype SourceLocation = {\n  line: number;\n  column: number;\n}\n\n/**\n * Takes a Source and a UTF-8 character offset, and returns the corresponding\n * line and column as a SourceLocation.\n */\nexport function getLocation(source: Source, position: number): SourceLocation {\n  const lineRegexp = /\\r\\n|[\\n\\r]/g;\n  let line = 1;\n  let column = position + 1;\n  let match;\n  while ((match = lineRegexp.exec(source.body)) && match.index < position) {\n    line += 1;\n    column = position + 1 - (match.index + match[0].length);\n  }\n  return { line, column };\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}