{"version":3,"sources":["validation/rules/KnownFragmentNames.js"],"names":[],"mappings":";;;;;QAcgB;QAUA;;AAbhB;;;;;;;;;;;AAGO,SAAS,sBAAT,CAAgC,QAAhC,EAA0D;AAC/D,gCAA4B,eAA5B,CAD+D;CAA1D;;;;;;;;AAUA,SAAS,kBAAT,CAA4B,OAA5B,EAA6D;AAClE,SAAO;AACL,4CAAe,MAAM;AACnB,UAAM,eAAe,KAAK,IAAL,CAAU,KAAV,CADF;AAEnB,UAAM,WAAW,QAAQ,WAAR,CAAoB,YAApB,CAAX,CAFa;AAGnB,UAAI,CAAC,QAAD,EAAW;AACb,gBAAQ,WAAR,CAAoB,wBAClB,uBAAuB,YAAvB,CADkB,EAElB,CAAE,KAAK,IAAL,CAFgB,CAApB,EADa;OAAf;KAJG;GAAP,CADkE;CAA7D","file":"validation/rules/KnownFragmentNames.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { ValidationContext } from '../index';\nimport { GraphQLError } from '../../error';\n\n\nexport function unknownFragmentMessage(fragName: string): string {\n  return `Unknown fragment \"${fragName}\".`;\n}\n\n/**\n * Known fragment names\n *\n * A GraphQL document is only valid if all `...Fragment` fragment spreads refer\n * to fragments defined in the same document.\n */\nexport function KnownFragmentNames(context: ValidationContext): any {\n  return {\n    FragmentSpread(node) {\n      const fragmentName = node.name.value;\n      const fragment = context.getFragment(fragmentName);\n      if (!fragment) {\n        context.reportError(new GraphQLError(\n          unknownFragmentMessage(fragmentName),\n          [ node.name ]\n        ));\n      }\n    }\n  };\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}