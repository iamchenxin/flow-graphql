{"version":3,"sources":["validation/rules/VariablesInAllowedPosition.js"],"names":[],"mappings":";;;;;QAkBgB;QAYA;;AAnBhB;;AACA;;AACA;;AACA;;AAIO,SAAS,gBAAT,CACL,OADK,EAEL,OAFK,EAGL,YAHK,EAIG;AACR,SAAO,gBAAc,0BAAqB,OAAO,OAAP,gBAAnC,kCACuB,OAAO,YAAP,SADvB,CADC;CAJH;;;;;;;;;;;;;;;AAYA,SAAS,0BAAT,CAAoC,OAApC,EAAqE;AAC1E,MAAI,YAAY,OAAO,MAAP,CAAc,IAAd,CAAZ,CADsE;;AAG1E,SAAO;AACL,yBAAqB;AACnB,8BAAQ;AACN,oBAAY,OAAO,MAAP,CAAc,IAAd,CAAZ,CADM;OADW;AAInB,4BAAM,WAAW;AACf,YAAM,SAAS,QAAQ,0BAAR,CAAmC,SAAnC,CAAT,CADS;;AAGf,eAAO,OAAP,CAAe,gBAAoB;cAAjB,iBAAiB;cAAX,iBAAW;;AACjC,cAAM,UAAU,KAAK,IAAL,CAAU,KAAV,CADiB;AAEjC,cAAM,SAAS,UAAU,OAAV,CAAT,CAF2B;AAGjC,cAAI,UAAU,IAAV,EAAgB;;;;;;AAMlB,gBAAM,SAAS,QAAQ,SAAR,EAAT,CANY;AAOlB,gBAAM,UAAU,8BAAY,MAAZ,EAAoB,OAAO,IAAP,CAA9B,CAPY;AAQlB,gBACE,WACA,CAAC,sCAAgB,MAAhB,EAAwB,cAAc,OAAd,EAAuB,MAAvB,CAAxB,EAAwD,IAAxD,CAAD,EACA;AACA,sBAAQ,WAAR,CAAoB,wBAClB,iBAAiB,OAAjB,EAA0B,OAA1B,EAAmC,IAAnC,CADkB,EAElB,CAAE,MAAF,EAAU,IAAV,CAFkB,CAApB,EADA;aAHF;WARF;SAHa,CAAf,CAHe;OAJE;KAArB;AA+BA,oDAAmB,WAAW;AAC5B,gBAAU,UAAU,QAAV,CAAmB,IAAnB,CAAwB,KAAxB,CAAV,GAA2C,SAA3C,CAD4B;KAhCzB;GAAP,CAH0E;CAArE;;;AA0CP,SAAS,aAAT,CAAuB,OAAvB,EAAgC,MAAhC,EAAwC;AACtC,SAAO,CAAC,OAAO,YAAP,IAAuB,6CAAxB,GACL,OADK,GAEL,+BAAmB,OAAnB,CAFK,CAD+B;CAAxC","file":"validation/rules/VariablesInAllowedPosition.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { ValidationContext } from '../index';\nimport { GraphQLError } from '../../error';\nimport { GraphQLNonNull } from '../../type/definition';\nimport { isTypeSubTypeOf } from '../../utilities/typeComparators';\nimport { typeFromAST } from '../../utilities/typeFromAST';\nimport type { GraphQLType } from '../../type/definition';\n\n\nexport function badVarPosMessage(\n  varName: string,\n  varType: GraphQLType,\n  expectedType: GraphQLType\n): string {\n  return `Variable \"$${varName}\" of type \"${String(varType)}\" used in ` +\n    `position expecting type \"${String(expectedType)}\".`;\n}\n\n/**\n * Variables passed to field arguments conform to type\n */\nexport function VariablesInAllowedPosition(context: ValidationContext): any {\n  let varDefMap = Object.create(null);\n\n  return {\n    OperationDefinition: {\n      enter() {\n        varDefMap = Object.create(null);\n      },\n      leave(operation) {\n        const usages = context.getRecursiveVariableUsages(operation);\n\n        usages.forEach(({ node, type }) => {\n          const varName = node.name.value;\n          const varDef = varDefMap[varName];\n          if (varDef && type) {\n            // A var type is allowed if it is the same or more strict (e.g. is\n            // a subtype of) than the expected type. It can be more strict if\n            // the variable type is non-null when the expected type is nullable.\n            // If both are list types, the variable item type can be more strict\n            // than the expected item type (contravariant).\n            const schema = context.getSchema();\n            const varType = typeFromAST(schema, varDef.type);\n            if (\n              varType &&\n              !isTypeSubTypeOf(schema, effectiveType(varType, varDef), type)\n            ) {\n              context.reportError(new GraphQLError(\n                badVarPosMessage(varName, varType, type),\n                [ varDef, node ]\n              ));\n            }\n          }\n        });\n      }\n    },\n    VariableDefinition(varDefAST) {\n      varDefMap[varDefAST.variable.name.value] = varDefAST;\n    }\n  };\n}\n\n// If a variable definition has a default value, it's effectively non-null.\nfunction effectiveType(varType, varDef) {\n  return !varDef.defaultValue || varType instanceof GraphQLNonNull ?\n    varType :\n    new GraphQLNonNull(varType);\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}