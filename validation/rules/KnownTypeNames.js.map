{"version":3,"sources":["validation/rules/KnownTypeNames.js"],"names":[],"mappings":";;;;;;;;;;QAiBgB;QAiBA;;AAvBhB;;AACA;;;;AACA;;;;;;;;;;;;;;;AAIO,SAAS,kBAAT,CACL,IADK,EAEL,cAFK,EAGG;AACR,MAAI,6BAA2B,WAA3B,CADI;AAER,MAAI,eAAe,MAAf,EAAuB;AACzB,kCAA4B,4BAAa,cAAb,OAA5B,CADyB;GAA3B;AAGA,SAAO,OAAP,CALQ;CAHH;;;;;;;;AAiBA,SAAS,cAAT,CAAwB,OAAxB,EAAyD;AAC9D,SAAO;;;;AAIL,0BAAsB;aAAM;KAAN;AACtB,6BAAyB;aAAM;KAAN;AACzB,yBAAqB;aAAM;KAAN;AACrB,+BAA2B;aAAM;KAAN;AAC3B,kCAAU,MAAM;AACd,UAAM,SAAS,QAAQ,SAAR,EAAT,CADQ;AAEd,UAAM,WAAW,KAAK,IAAL,CAAU,KAAV,CAFH;AAGd,UAAM,OAAO,OAAO,OAAP,CAAe,QAAf,CAAP,CAHQ;AAId,UAAI,CAAC,IAAD,EAAO;AACT,gBAAQ,WAAR,CACE,wBACE,mBACE,QADF,EAEE,8BAAe,QAAf,EAAyB,oBAAY,OAAO,UAAP,EAAZ,CAAzB,CAFF,CADF,EAKE,CAAE,IAAF,CALF,CADF,EADS;OAAX;KAZG;GAAP,CAD8D;CAAzD","file":"validation/rules/KnownTypeNames.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { ValidationContext } from '../index';\nimport { GraphQLError } from '../../error';\nimport suggestionList from '../../jsutils/suggestionList';\nimport quotedOrList from '../../jsutils/quotedOrList';\nimport type { GraphQLType } from '../../type/definition';\n\n\nexport function unknownTypeMessage(\n  type: GraphQLType,\n  suggestedTypes: Array<string>\n): string {\n  let message = `Unknown type \"${type}\".`;\n  if (suggestedTypes.length) {\n    message += ` Did you mean ${quotedOrList(suggestedTypes)}?`;\n  }\n  return message;\n}\n\n/**\n * Known type names\n *\n * A GraphQL document is only valid if referenced types (specifically\n * variable definitions and fragment conditions) are defined by the type schema.\n */\nexport function KnownTypeNames(context: ValidationContext): any {\n  return {\n    // TODO: when validating IDL, re-enable these. Experimental version does not\n    // add unreferenced types, resulting in false-positive errors. Squelched\n    // errors for now.\n    ObjectTypeDefinition: () => false,\n    InterfaceTypeDefinition: () => false,\n    UnionTypeDefinition: () => false,\n    InputObjectTypeDefinition: () => false,\n    NamedType(node) {\n      const schema = context.getSchema();\n      const typeName = node.name.value;\n      const type = schema.getType(typeName);\n      if (!type) {\n        context.reportError(\n          new GraphQLError(\n            unknownTypeMessage(\n              typeName,\n              suggestionList(typeName, Object.keys(schema.getTypeMap()))\n            ),\n            [ node ]\n          )\n        );\n      }\n    }\n  };\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}