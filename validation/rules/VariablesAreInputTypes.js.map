{"version":3,"sources":["validation/rules/VariablesAreInputTypes.js"],"names":[],"mappings":";;;;;QAkBgB;QAaA;;AApBhB;;AAEA;;AACA;;AACA;;AAGO,SAAS,wBAAT,CACL,YADK,EAEL,QAFK,EAGG;AACR,yBAAqB,gDAA2C,eAAhE,CADQ;CAHH;;;;;;;;;;;;;;;;;;AAaA,SAAS,sBAAT,CAAgC,OAAhC,EAAiE;AACtE,SAAO;AACL,oDAAmB,MAAyC;AAC1D,UAAM,OAAO,8BAAY,QAAQ,SAAR,EAAZ,EAAiC,KAAK,IAAL,CAAxC;;;AADoD,UAItD,QAAQ,CAAC,6BAAY,IAAZ,CAAD,EAAoB;AAC9B,YAAM,eAAe,KAAK,QAAL,CAAc,IAAd,CAAmB,KAAnB,CADS;AAE9B,gBAAQ,WAAR,CAAoB,wBAClB,yBAAyB,YAAzB,EAAuC,oBAAM,KAAK,IAAL,CAA7C,CADkB,EAElB,CAAE,KAAK,IAAL,CAFgB,CAApB,EAF8B;OAAhC;KALG;GAAP,CADsE;CAAjE","file":"validation/rules/VariablesAreInputTypes.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { ValidationContext } from '../index';\nimport { GraphQLError } from '../../error';\nimport type { VariableDefinition } from '../../language/ast';\nimport { print } from '../../language/printer';\nimport { isInputType } from '../../type/definition';\nimport { typeFromAST } from '../../utilities/typeFromAST';\n\n\nexport function nonInputTypeOnVarMessage(\n  variableName: string,\n  typeName: string\n): string {\n  return `Variable \"$${variableName}\" cannot be non-input type \"${typeName}\".`;\n}\n\n/**\n * Variables are input types\n *\n * A GraphQL operation is only valid if all the variables it defines are of\n * input types (scalar, enum, or input object).\n */\nexport function VariablesAreInputTypes(context: ValidationContext): any {\n  return {\n    VariableDefinition(node: VariableDefinition): ?GraphQLError {\n      const type = typeFromAST(context.getSchema(), node.type);\n\n      // If the variable type is not an input type, return an error.\n      if (type && !isInputType(type)) {\n        const variableName = node.variable.name.value;\n        context.reportError(new GraphQLError(\n          nonInputTypeOnVarMessage(variableName, print(node.type)),\n          [ node.type ]\n        ));\n      }\n    }\n  };\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}