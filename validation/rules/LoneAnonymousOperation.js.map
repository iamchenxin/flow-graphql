{"version":3,"sources":["validation/rules/LoneAnonymousOperation.js"],"names":[],"mappings":";;;;;QAegB;QAUA;;AAdhB;;AACA;;AAGO,SAAS,4BAAT,GAAgD;AACrD,SAAO,8DAAP,CADqD;CAAhD;;;;;;;;;;;;;;;;;;AAUA,SAAS,sBAAT,CAAgC,OAAhC,EAAiE;AACtE,MAAI,iBAAiB,CAAjB,CADkE;AAEtE,SAAO;AACL,gCAAS,MAAM;AACb,uBAAiB,KAAK,WAAL,CAAiB,MAAjB,CACf;eAAc,WAAW,IAAX;OAAd,CADe,CAEf,MAFe,CADJ;KADV;AAML,sDAAoB,MAAM;AACxB,UAAI,CAAC,KAAK,IAAL,IAAa,iBAAiB,CAAjB,EAAoB;AACpC,gBAAQ,WAAR,CACE,wBAAiB,8BAAjB,EAAiD,CAAE,IAAF,CAAjD,CADF,EADoC;OAAtC;KAPG;GAAP,CAFsE;CAAjE","file":"validation/rules/LoneAnonymousOperation.js","sourcesContent":["/* @flow */\n/**\n *  Copyright (c) 2015, Facebook, Inc.\n *  All rights reserved.\n *\n *  This source code is licensed under the BSD-style license found in the\n *  LICENSE file in the root directory of this source tree. An additional grant\n *  of patent rights can be found in the PATENTS file in the same directory.\n */\n\nimport type { ValidationContext } from '../index';\nimport { GraphQLError } from '../../error';\nimport { OPERATION_DEFINITION } from '../../language/kinds';\n\n\nexport function anonOperationNotAloneMessage(): string {\n  return 'This anonymous operation must be the only defined operation.';\n}\n\n/**\n * Lone anonymous operation\n *\n * A GraphQL document is only valid if when it contains an anonymous operation\n * (the query short-hand) that it contains only that one operation definition.\n */\nexport function LoneAnonymousOperation(context: ValidationContext): any {\n  let operationCount = 0;\n  return {\n    Document(node) {\n      operationCount = node.definitions.filter(\n        definition => definition.kind === OPERATION_DEFINITION\n      ).length;\n    },\n    OperationDefinition(node) {\n      if (!node.name && operationCount > 1) {\n        context.reportError(\n          new GraphQLError(anonOperationNotAloneMessage(), [ node ])\n        );\n      }\n    }\n  };\n}\n"],"sourceRoot":"/home/iamchenxin/project/fork/graphql-js/src"}